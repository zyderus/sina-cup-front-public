name: Deploy to Staging

on:
  workflow_run:
    workflows: ['CI Pipeline'] # Must match the workflow name in `ci.yml`
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/main')
    steps:
      # - name: Checkout code
      #   uses: actions/checkout@v4

      # - name: Download Build Artifacts
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: build-artifacts
      #     path: ./dist
      - name: Download and extract artifact
        run: |
          artifact_id=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}/artifacts \
            | jq '.artifacts[0].id')

          echo "Artifact ID: $artifact_id"

          # Download the artifact as a ZIP file
          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -o artifact.zip \
            https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$artifact_id/zip

          # Create dist folder
          mkdir -p dist

          # Extract the artifact ZIP into dist/
          unzip artifact.zip -d dist

      # - name: Get artifacts list
      #   run: |
      #     curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      #     https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }}/artifacts

      - name: Verify Artifact Contents
        run: ls -l dist/

      - name: Show Artifact Contents
        run: cat dist/output.txt

      - name: Deploy to Staging
        run: echo "Deploying using files from dist/"
