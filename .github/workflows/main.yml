name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  # âœ… Step 1: Install Dependencies, Lint, and Run Tests
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci # Ensures clean, reproducible installs

      - name: Run linting
        run: echo 'Linting...'

      - name: Run unit tests
        run: echo 'Running unit tests...'

      - name: Run integration tests
        run: echo 'Running Integration tests...' # Assumes a separate script for integration tests

  # ðŸš€ Step 2: Build & Push Docker Image (Only for main branch)
  build-and-push:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo 'Logging in to Docker hub...'

      - name: Build and tag Docker image
        run: echo 'Building and tagging a docker image...'

      - name: Push image to Docker Hub
        run: echo 'Pushing the docker image...'

  # ðŸŽ­ Step 3: Deploy to Staging
  deploy-staging:
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to AWS ECS (Staging)
        run: echo 'Deploying Staging to AWS ECS...'

  # ðŸŽ¯ Step 4: Deploy to Production (Only after approval)
  deploy-prod:
    needs: deploy-staging
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to AWS ECS (Production)
        run: echo 'Deploying Production to AWS ECS...'
